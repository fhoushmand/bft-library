Changed the java.security config file in order to remove "NULL" tls algorithm from the disabled tls algorithms
Otherwise, handshake will fail
to do so, redefine "jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, DH keySize < 1024, EC keySize < 224, 3DES_EDE_CBC, anon"
in the config/java.security file (notice there is no NULL)
NULL is for when there is no check I assume.
need to change for production


To create a replicated register, follow the steps below:
    1) create "hosts.config{#}" file under config/ directory. This file includes the list of hosts with their ip address and connection ports.
       It comes from the quorum of the object that can host it.
    2) create "system.config{#}" file under config/ directory similar to the existing file. The parameters are selfe explanatory.
        Added "system.servers.processNumber = #" entry to the system.config file
        It assigns a unique processNumber to each cluster. This is done to let multiple clusters run on same set of hosts if needed
        hosts.config{#} and currenView{#} are needed and created according to the {#}
    3) Create and run multiple instances of "RegisterServer..." with three arguments:
        first is the initial value of the register,
        second is the replica processNumber (must match the processNumber of the hosts.config and system.config),
        third is the cluster processNumber -> you need to keep track of cluster ids to the memory location each cluster stores
        normaly, each variable in the program must be stored in a replicated register. keep a mapping from cluster processNumber to
        variables.
    4) Create instances of RegisterClient...(clientID, clusterID) per program variable, you can call write(a,id) and read(id) on it


-To run on cluster:
  make sure you load java/11 module, otherwise "InvalidKeyStoreFormat" is thrown
  make sure to set defaultkeys to false and usesignature to 1. also, in config*/keys there should exists a privatekey{#id} file

-For now, the method id and the method sequence number are passed to each method in the partition object
-Later think about how to move them to the runtime

-ObjReCall rule which is implemented in register server and client by adding ids to client methods and a cache (map) from id to return value to the sever code

To kill all the process running :
    kill $(lsof -t -i:13000-14000 -sTCP:LISTEN)

Results:
*)A:1;B:1
    20 calls = 114ms - 114ms - 114ms
*)A:2;B:1
    20 calls = 145ms - 140ms - 145ms
*)A:2;B:2
    20 calls = 175ms - 175ms - 176ms
*)A:3;B:1
    20 calls = 168ms - 157ms - 173ms
*)A:3;B:2
    20 calls = 205ms - 185ms - 205ms
*)A:4;B:1
    20 calls = 199ms - 198ms - 194ms
*)A:3;B:3
    20 calls = 220ms - 226ms - 223ms
*)A:4;B:4
    20 calls = 297ms - 307ms - 301ms









